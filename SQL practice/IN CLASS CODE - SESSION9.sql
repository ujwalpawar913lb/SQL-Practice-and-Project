use DEMO;

CREATE TABLE PRODUCT
(PID CHAR(5),
PDESC VARCHAR(30),
PRICE INT);

CREATE TABLE STOCK
(PID CHAR(5),
SQTY INT);

CREATE TABLE ORDERS
(OID CHAR(5),
PID CHAR(5),
CID CHAR(5),
QTY INT);

INSERT INTO PRODUCT VALUES  ('P0001', 'DELL KEYbOARD', 500);
INSERT INTO PRODUCT VALUES  ('P0002', 'DELL MOUSE', 350);
INSERT INTO PRODUCT VALUES  ('P0003', 'SAMSUNG LED 18"', 6500);
INSERT INTO PRODUCT VALUES  ('P0004', '8 GB RAM', 2500);
INSERT INTO PRODUCT VALUES  ('P0005', 'HP I5 LAPTOP', 65000);

INSERT INTO STOCK VALUES ('P0001', 100);
INSERT INTO STOCK VALUES ('P0002', 200);
INSERT INTO STOCK VALUES ('P0003', 50);
INSERT INTO STOCK VALUES ('P0004', 50);
INSERT INTO STOCK VALUES ('P0005', 50);

SELECT * FROM PRODUCT;
SELECT * FROM STOCK;
SELECT * FROM ORDERS;

DELETE FROM ORDERS

INSERT INTO ORDERS VALUES ('O0001', 'P0001','C0001',10);
INSERT INTO ORDERS VALUES ('O0002', 'P0001','C0002',10);
INSERT INTO ORDERS VALUES ('O0003', 'P0002','C0002',10);
INSERT INTO ORDERS VALUES ('O0004', 'P0003','C0003',20);
INSERT INTO ORDERS VALUES ('O0005', 'P0004','C0003',10);
INSERT INTO ORDERS VALUES ('O0006', 'P0003','C0004',40);
INSERT INTO ORDERS VALUES ('O0007', 'P0004','C0005',20);
INSERT INTO ORDERS VALUES ('O0008', 'P0004','C0006',20);
INSERT INTO ORDERS VALUES ('O0009', 'P0004','C0001',5);
INSERT INTO ORDERS VALUES ('O0010', 'P0004','C0002',5);

UPDATE ORDERS SET QTY = 10 WHERE OID = 'O0010';
UPDATE ORDERS SET QTY = 20 WHERE OID = 'O0005';

UPDATE ORDERS SET QTY = 30 WHERE OID = 'O0004';


DROP TRIGGER TR_IN_ORD;

CREATE TRIGGER TR_IN_ORD
ON ORDERS 
FOR INSERT 
AS
BEGIN
		SET NOCOUNT ON;
		UPDATE STOCK SET SQTY = SQTY - (SELECT QTY FROM INSERTED)
		WHERE PID = (SELECT PID FROM INSERTED);
END;


CREATE TRIGGER TR_DEL_PRO
ON PRODUCT
FOR DELETE 
AS
BEGIN
		SET NOCOUNT ON;
		DELETE FROM STOCK WHERE PID = (SELECT PID FROM DELETED);
END;

DELETE FROM PRODUCT WHERE PID = 'P0005';


CREATE TRIGGER TR_UP_STK
ON ORDERS
FOR UPDATE
AS
BEGIN
		SET NOCOUNT ON;
		DECLARE @OQ AS INT;
		DECLARE @NQ AS INT;

		SET @OQ = (SELECT QTY FROM DELETED);
		SET @NQ= (SELECT QTY FROM INSERTED);

		UPDATE STOCK SET SQTY = SQTY + @OQ - @NQ 
		WHERE PID = (SELECT PID FROM INSERTED);

END;

DROP TRIGGER TR_IN_ORD;
CREATE TRIGGER TR_IN_ORD
ON ORDERS 
FOR INSERT 
AS
BEGIN
		SET NOCOUNT ON;

		DECLARE @QR AS INT;
		DECLARE @QS AS INT;

		SET @QR=(SELECT QTY FROM INSERTED);
		SET @QS = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));


		IF @QS >= @QR 
			BEGIN
				UPDATE STOCK SET SQTY = SQTY - @QR
				WHERE PID = (SELECT PID FROM INSERTED);

				COMMIT;
				PRINT ('ORDER ACCEPTED');
			END;
		ELSE
			BEGIN
				ROLLBACK;
				PRINT ('INSUFFICIENT QUANTITY -  ORDER REJECTED');
			END;
END;
